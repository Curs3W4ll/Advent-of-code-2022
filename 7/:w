from typing import List
from itertools import groupby
from enum import Enum
from re import findall


class File:
    name: str
    size: int

    def __init__(self, name: str, size: int):
        self.name = name
        self.size = size

class Dir:
    files: List[File] = []

    def __init__(self, name: str):
        self.name = name

    def getSize(self) -> int:
        sum: int = 0
        for file in self.files:
            sum += file.size

    def goTo(List[str] path):

COMMAND_HEADER = "$ "
DIRECTORY_HEADER = "dir "

path: List[str] = []
data: Dir = Dir("/")

def parseCommand(command: str) -> None:
    goToPath: str = command.lstrip("cd ").lstrip("cd")
    if command.startswith("cd"):
        if goToPath == "..":
            path.pop()
        else:
            path.append(goToPath)
    elif command.startswith("ls"):
        pass
    else:
        print(f"Unknown command: '{command}'")

def parseElemInfos(infos: str) -> None:
    if infos.startswith(DIRECTORY_HEADER):
        addNewDirectory(infos.lstrip(DIRECTORY_HEADER))
    else:
        storeFileSize(infos.split(" ")[0], infos.split(" ")[1:])

def addNewDirectory(name: str) -> None:
    pass

def storeFileSize(ssize: str, name: str) -> None:
    if not ssize.isdigit():
        print(f"Size '{ssize}' for file '{name}' is not a number")
    size: int = int(ssize)

def run(input: List[str]):
    for line in input:
        if line.startswith(COMMAND_HEADER):
            parseCommand(line.lstrip(COMMAND_HEADER))
        else:
            parseElemInfos(line)
